[{"D:\\Main_samurai_TSX\\my-app\\src\\index.tsx":"1","D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"2","D:\\Main_samurai_TSX\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"3","D:\\Main_samurai_TSX\\my-app\\src\\components\\Dialogs\\Dialogs.tsx":"4","D:\\Main_samurai_TSX\\my-app\\src\\components\\News\\News.tsx":"5","D:\\Main_samurai_TSX\\my-app\\src\\components\\Navbar\\Navbar.tsx":"6","D:\\Main_samurai_TSX\\my-app\\src\\App.tsx":"7","D:\\Main_samurai_TSX\\my-app\\src\\components\\News\\OneNews\\OneNews.tsx":"8","D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"9","D:\\Main_samurai_TSX\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx":"10","D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\Profile.tsx":"11","D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"12","D:\\Main_samurai_TSX\\my-app\\src\\redux\\profileReducer.tsx":"13","D:\\Main_samurai_TSX\\my-app\\src\\redux\\dialogsReducer.tsx":"14","D:\\Main_samurai_TSX\\my-app\\src\\redux\\newsReducer.tsx":"15","D:\\Main_samurai_TSX\\my-app\\src\\redux\\store.ts":"16","D:\\Main_samurai_TSX\\my-app\\src\\redux\\redux-store.tsx":"17","D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"18","D:\\Main_samurai_TSX\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx":"19","D:\\Main_samurai_TSX\\my-app\\src\\components\\News\\NewsContainer.tsx":"20","D:\\Main_samurai_TSX\\my-app\\src\\components\\Header\\Header.tsx":"21","D:\\Main_samurai_TSX\\my-app\\src\\redux\\usersReducer.tsx":"22","D:\\Main_samurai_TSX\\my-app\\src\\components\\Users\\UsersContainer.tsx":"23","D:\\Main_samurai_TSX\\my-app\\src\\components\\Users\\Users.tsx":"24","D:\\Main_samurai_TSX\\my-app\\src\\components\\common\\preloader\\Preloader.tsx":"25","D:\\Main_samurai_TSX\\my-app\\src\\components\\Header\\HeaderContainer.tsx":"26","D:\\Main_samurai_TSX\\my-app\\src\\api\\api.ts":"27","D:\\Main_samurai_TSX\\my-app\\src\\redux\\authReducer.tsx":"28","D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\ProfileContainer.tsx":"29"},{"size":734,"mtime":1616682140499,"results":"30","hashOfConfig":"31"},{"size":978,"mtime":1616617082780,"results":"32","hashOfConfig":"31"},{"size":404,"mtime":1616615561444,"results":"33","hashOfConfig":"31"},{"size":1359,"mtime":1618074455106,"results":"34","hashOfConfig":"31"},{"size":795,"mtime":1616615309071,"results":"35","hashOfConfig":"31"},{"size":721,"mtime":1617558471410,"results":"36","hashOfConfig":"31"},{"size":1146,"mtime":1618952021261,"results":"37","hashOfConfig":"31"},{"size":283,"mtime":1616615685521,"results":"38","hashOfConfig":"31"},{"size":676,"mtime":1618085863189,"results":"39","hashOfConfig":"31"},{"size":276,"mtime":1616615606837,"results":"40","hashOfConfig":"31"},{"size":426,"mtime":1619353674830,"results":"41","hashOfConfig":"31"},{"size":441,"mtime":1616615743674,"results":"42","hashOfConfig":"31"},{"size":2870,"mtime":1619684443475,"results":"43","hashOfConfig":"31"},{"size":1812,"mtime":1619683600528,"results":"44","hashOfConfig":"31"},{"size":1728,"mtime":1618156735687,"results":"45","hashOfConfig":"31"},{"size":3361,"mtime":1616614857133,"results":"46","hashOfConfig":"31"},{"size":1097,"mtime":1619115887423,"results":"47","hashOfConfig":"31"},{"size":1088,"mtime":1616617152943,"results":"48","hashOfConfig":"31"},{"size":1664,"mtime":1618074600882,"results":"49","hashOfConfig":"31"},{"size":1024,"mtime":1616615392759,"results":"50","hashOfConfig":"31"},{"size":531,"mtime":1618604781436,"results":"51","hashOfConfig":"31"},{"size":4342,"mtime":1619684865502,"results":"52","hashOfConfig":"31"},{"size":2593,"mtime":1619508274819,"results":"53","hashOfConfig":"31"},{"size":1914,"mtime":1619353322131,"results":"54","hashOfConfig":"31"},{"size":283,"mtime":1618053448779,"results":"55","hashOfConfig":"31"},{"size":1294,"mtime":1619353528114,"results":"56","hashOfConfig":"31"},{"size":1718,"mtime":1619595253477,"results":"57","hashOfConfig":"31"},{"size":1162,"mtime":1619683608384,"results":"58","hashOfConfig":"31"},{"size":1350,"mtime":1619354070572,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1qlazp1",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},"D:\\Main_samurai_TSX\\my-app\\src\\index.tsx",[],["127","128"],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Dialogs\\Dialogs.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\components\\News\\News.tsx",[],["129","130"],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Navbar\\Navbar.tsx",["131","132"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\n\r\n\r\n\r\nfunction Navbar() {\r\n\treturn (\r\n\t\t<nav className={s.nav}>\r\n\t\t\t<div className={`${s.item}`}><NavLink activeClassName={s.active} to='/profile'>Profile</NavLink></div>\r\n\t\t\t<div className={s.item}><NavLink activeClassName={s.active} to='/dialogs'>Messages</NavLink></div>\r\n\t\t\t<div className={s.item}><NavLink activeClassName={s.active} to='/news'>News</NavLink></div>\r\n\t\t\t<div className={s.item}><NavLink activeClassName={s.active} to='/users'>Users</NavLink></div>\r\n\t\t\t<div className={s.item}><a>Music</a></div>\r\n\t\t\t<div className={s.item}><a>Settings</a></div>\r\n\t\t</nav >\r\n\t)\r\n}\r\n\r\n\r\nexport default Navbar;","D:\\Main_samurai_TSX\\my-app\\src\\App.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\components\\News\\OneNews\\OneNews.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\Profile.tsx",["133"],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\redux\\profileReducer.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\redux\\dialogsReducer.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\redux\\newsReducer.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\redux\\store.ts",["134","135","136","137","138","139"],"D:\\Main_samurai_TSX\\my-app\\src\\redux\\redux-store.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["140"],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx",["141","142"],"import React from 'react';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { addMessageActionCreator, InitialDialogsStateType, updateNewTextMessageActionCreator } from '../../redux/dialogsReducer';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\n/* type mapStateToPropsType = {\r\n\tdialogsPage: InitialDialogsStateType\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n\taddMessage: () => void\r\n\tupdateNewTextMessage: (text: string) => void\r\n} */\r\n/* \r\nexport type DialogsPropsType = mapStateToPropsType & mapDispatchToPropsType; */\r\n/* \r\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n\treturn {\r\n\t\tdialogsPage: state.messagesPage\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n\treturn {\r\n\t\taddMessage: () => {\r\n\t\t\tdispatch(addMessageActionCreator())\r\n\t\t},\r\n\t\tupdateNewTextMessage: (text: string) => {\r\n\t\t\tdispatch(updateNewTextMessageActionCreator(text))\r\n\t\t},\r\n\t}\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;\r\n */\r\n\r\nexport const DialogsContainer2: React.FC = () => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst dialogsPage = useSelector<AppStateType, InitialDialogsStateType>((state) => state.messagesPage);\r\n\r\n\tconst addMessage = () => {\r\n\t\tdispatch(addMessageActionCreator())\r\n\t}\r\n\r\n\tconst updateNewTextMessage = (text: string) => {\r\n\t\tdispatch(updateNewTextMessageActionCreator(text))\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<Dialogs dialogsPage={dialogsPage} addMessage={addMessage} updateNewTextMessage={updateNewTextMessage} />\r\n\t)\r\n}\r\n\r\n","D:\\Main_samurai_TSX\\my-app\\src\\components\\News\\NewsContainer.tsx",["143"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { addNewsActionCreator, InitialStateNewsType, updateTextNewsActionCreator } from '../../redux/newsReducer';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport News from './News';\r\n\r\n\r\n\r\ntype MapStateToPropsType = {\r\n\tnewsPage: InitialStateNewsType\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n\taddNews: () => void\r\n\tonChangeTextNews: (text: string) => void\r\n}\r\n\r\nexport type NewsProps = MapStateToPropsType & MapDispatchToProps;\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n\treturn {\r\n\t\tnewsPage: state.newsPage\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => {\r\n\treturn {\r\n\t\taddNews: () => {\r\n\t\t\tdispatch(addNewsActionCreator())\r\n\t\t},\r\n\t\tonChangeTextNews: (text: string) => {\r\n\t\t\tdispatch(updateTextNewsActionCreator(text))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst NewsContainer = connect(mapStateToProps, mapDispatchToProps)(News);\r\n\r\nexport default NewsContainer;","D:\\Main_samurai_TSX\\my-app\\src\\components\\Header\\Header.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\redux\\usersReducer.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Users\\UsersContainer.tsx",["144","145"],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Users\\Users.tsx",["146"],"import axios from 'axios';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport UserPhoto from '../../assets/images/user-male.png'\r\nimport { userType } from '../../redux/usersReducer';\r\nimport s from './Users.module.css';\r\n\r\nexport type UsersType = {\r\n\ttotalUsersCount: number\r\n\tpageSize: number\r\n\tcurrentPage: number\r\n\tusers: userType[]\r\n\tfollowingInProgress: string[]\r\n\tonPageChanged: (pageNumber: number) => void\r\n\tfollowThunk: (userId: string) => void\r\n\tunfollowThunk: (userId: string) => void\r\n}\r\n\r\nexport const Users = (props: UsersType) => {\r\n\r\n\tlet pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\tlet pages = [];\r\n\r\n\tfor (let i = 1; i <= pagesCount; i++) {\r\n\t\tpages.push(i);\r\n\t}\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t{pages.map(item => {\r\n\t\t\t\t\treturn <span onClick={\r\n\t\t\t\t\t\t() => { props.onPageChanged(item) }\r\n\t\t\t\t\t} className={props.currentPage === item ? s.selectedPage : ''}>{item}</span>\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tprops.users.map(item => <div key={item.id}>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<NavLink to={'/profile/' + item.id}>\r\n\t\t\t\t\t\t\t\t<img className={s.userPhoto} src={item.photos.small != null ? item.photos.small : UserPhoto} alt=\"\" />\r\n\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{item.followed\r\n\t\t\t\t\t\t\t\t? <button disabled={props.followingInProgress.some(id => id === item.id)} onClick={() => {\r\n\t\t\t\t\t\t\t\t\tprops.unfollowThunk(item.id)\r\n\t\t\t\t\t\t\t\t}}>Unfollow</button>\r\n\t\t\t\t\t\t\t\t: <button disabled={props.followingInProgress.some(id => id === item.id)} onClick={() => {\r\n\t\t\t\t\t\t\t\t\tprops.followThunk(item.id)\r\n\t\t\t\t\t\t\t\t}}>Follow</button>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<div>{item.name}</div>\r\n\t\t\t\t\t\t\t<div>{item.status}</div>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<div>{'item.location.country'}</div>\r\n\t\t\t\t\t\t\t<div>{'item.location.city'}</div>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>)\r\n\t\t\t}\r\n\t\t</div >\r\n\t)\r\n}","D:\\Main_samurai_TSX\\my-app\\src\\components\\common\\preloader\\Preloader.tsx",["147"],"import React from 'react';\r\nimport preloaderGif from '../../../assets/images/preloader.gif';\r\n\r\ntype preloaderType = {\r\n}\r\n\r\nexport const Preloader = (props: preloaderType) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<img style={{ width: '100px', height: '100px' }} src={preloaderGif} />\r\n\t\t</>\r\n\t)\r\n}","D:\\Main_samurai_TSX\\my-app\\src\\components\\Header\\HeaderContainer.tsx",["148","149","150","151"],"import axios from 'axios';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport s from './Header.module.css';\r\nimport { getAuthUser } from '../../redux/authReducer';\r\nimport { AppStateType } from '../../redux/redux-store';\r\n\r\nexport type responseTypeItem = {\r\n\tdata: {\r\n\t\tid: number\r\n\t\tlogin: string\r\n\t\temail: string\r\n\t}\r\n\tmessages: string[]\r\n\tfieldsErrors: string[]\r\n\tresultCode: number\r\n}\r\n\r\ntype responseType = {\r\n\tdata: responseTypeItem\r\n}\r\n\r\n\r\nclass HeaderContainer extends React.Component<headerContainerType> {\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getAuthUser();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Header {...this.props} />\r\n\t\t)\r\n\t}\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n\tid: Number | null\r\n\temail: string | null\r\n\tlogin: string | null\r\n\tisAuth: boolean\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n\tgetAuthUser: () => void\r\n}\r\nexport type headerContainerType = mapStateToPropsType & mapDispatchToPropsType;\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n\treturn {\r\n\t\tid: state.auth.id,\r\n\t\temail: state.auth.email,\r\n\t\tlogin: state.auth.login,\r\n\t\tisAuth: state.auth.isAuth,\r\n\t}\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { getAuthUser })(HeaderContainer);","D:\\Main_samurai_TSX\\my-app\\src\\api\\api.ts",[],"D:\\Main_samurai_TSX\\my-app\\src\\redux\\authReducer.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\ProfileContainer.tsx",["152"],"import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport { getUserProfile, profileType } from '../../redux/profileReducer';\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\n\r\n\r\nexport type mapStateToPropsType = {\r\n\tprofile: profileType\r\n}\r\nexport type mapDispatchToPropsType = {\r\n\tgetUserProfile: (userId: string) => void\r\n}\r\n\r\nexport type pathPatamsType = {\r\n\tuserId: string\r\n}\r\nexport type ProfileContainerType = RouteComponentProps<pathPatamsType> & mapStateToPropsType & mapDispatchToPropsType;\r\n\r\n\r\nclass ProfileContainer extends React.Component<ProfileContainerType> {\r\n\tcomponentDidMount() {\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\tif (!userId) {\r\n\t\t\tuserId = '2';\r\n\t\t}\r\n\t\tthis.props.getUserProfile(userId);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Profile {...this.props} profile={this.props.profile} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n\treturn {\r\n\t\tprofile: state.profilePage.profile\r\n\t}\r\n}\r\n\r\nconst withUrlDataContainerComponent = withRouter(ProfileContainer);\r\n\r\nexport const ConnectWithUrlDataContainerComponent = connect(mapStateToProps, { getUserProfile })(withUrlDataContainerComponent);\r\n",{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"153","replacedBy":"157"},{"ruleId":"155","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":14,"column":28,"nodeType":"161","endLine":14,"endColumn":31},{"ruleId":"159","severity":1,"message":"160","line":15,"column":28,"nodeType":"161","endLine":15,"endColumn":31},{"ruleId":"162","severity":1,"message":"163","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":9},{"ruleId":"162","severity":1,"message":"166","line":1,"column":10,"nodeType":"164","messageId":"165","endLine":1,"endColumn":30},{"ruleId":"162","severity":1,"message":"167","line":1,"column":32,"nodeType":"164","messageId":"165","endLine":1,"endColumn":62},{"ruleId":"162","severity":1,"message":"168","line":2,"column":10,"nodeType":"164","messageId":"165","endLine":2,"endColumn":27},{"ruleId":"162","severity":1,"message":"169","line":2,"column":29,"nodeType":"164","messageId":"165","endLine":2,"endColumn":56},{"ruleId":"162","severity":1,"message":"170","line":3,"column":10,"nodeType":"164","messageId":"165","endLine":3,"endColumn":27},{"ruleId":"162","severity":1,"message":"171","line":3,"column":29,"nodeType":"164","messageId":"165","endLine":3,"endColumn":56},{"ruleId":"162","severity":1,"message":"172","line":1,"column":8,"nodeType":"164","messageId":"165","endLine":1,"endColumn":13},{"ruleId":"162","severity":1,"message":"173","line":2,"column":10,"nodeType":"164","messageId":"165","endLine":2,"endColumn":17},{"ruleId":"162","severity":1,"message":"174","line":3,"column":10,"nodeType":"164","messageId":"165","endLine":3,"endColumn":18},{"ruleId":"162","severity":1,"message":"172","line":1,"column":8,"nodeType":"164","messageId":"165","endLine":1,"endColumn":13},{"ruleId":"162","severity":1,"message":"175","line":1,"column":8,"nodeType":"164","messageId":"165","endLine":1,"endColumn":13},{"ruleId":"162","severity":1,"message":"176","line":27,"column":6,"nodeType":"164","messageId":"165","endLine":27,"endColumn":18},{"ruleId":"162","severity":1,"message":"175","line":1,"column":8,"nodeType":"164","messageId":"165","endLine":1,"endColumn":13},{"ruleId":"177","severity":1,"message":"178","line":10,"column":4,"nodeType":"161","endLine":10,"endColumn":74},{"ruleId":"162","severity":1,"message":"175","line":1,"column":8,"nodeType":"164","messageId":"165","endLine":1,"endColumn":13},{"ruleId":"162","severity":1,"message":"179","line":4,"column":10,"nodeType":"164","messageId":"165","endLine":4,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":6,"column":8,"nodeType":"164","messageId":"165","endLine":6,"endColumn":9},{"ruleId":"162","severity":1,"message":"180","line":21,"column":6,"nodeType":"164","messageId":"165","endLine":21,"endColumn":18},{"ruleId":"162","severity":1,"message":"163","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":9},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],["181"],["182"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'s' is defined but never used.","Identifier","unusedVar","'AddMessageActionType' is defined but never used.","'UpdateNewTextMessageActionType' is defined but never used.","'AddNewsActionType' is defined but never used.","'updateTextNewsActionCreator' is defined but never used.","'AddPostActionType' is defined but never used.","'UpdateNewPostTextActionType' is defined but never used.","'React' is defined but never used.","'connect' is defined but never used.","'Dispatch' is defined but never used.","'axios' is defined but never used.","'ResponseType' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'NavLink' is defined but never used.","'responseType' is defined but never used.","no-global-assign","no-unsafe-negation"]