{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/News/OneNews/OneNews.module.css","components/News/News.module.css","reportWebVitals.ts","redux/state.ts","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/News/OneNews/OneNews.tsx","components/News/News.tsx","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rerenderIntireTree","state","console","log","profilePage","posts","id","message","likesCount","newPostText","messagesPage","messages","dialogs","name","newTextMessage","newsPage","news","timeOfPublication","textNews","addPost","newPost","push","updateNewPostText","newText","addMessage","newMessage","updateNewTextMessage","addNews","newNews","Header","className","s","header","src","alt","Navbar","nav","item","activeClassName","active","to","DialogItem","props","path","dialog","Message","Dialogs","dialogsElements","map","messagesElements","React","createRef","dialogsItems","ref","onChange","current","value","onClick","text","Post","MyPosts","postsElements","newPostElement","postsBlock","ProfileInfo","descriptionBlock","Profile","OneNews","time","News","newsElements","useState","setTextNews","error","setError","e","currentTarget","date","Date","getHours","getMinutes","getSeconds","App","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e62cf93c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2b4YA\",\"item\":\"Navbar_item__1D5N0\",\"active\":\"Navbar_active__2GpW0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1JnEG\",\"dialogsItems\":\"Dialogs_dialogsItems__gJ1rI\",\"active\":\"Dialogs_active__2ubTK\",\"messages\":\"Dialogs_messages__1TSqi\",\"message\":\"Dialogs_message__1U5xs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2Eksa\",\"posts\":\"MyPosts_posts__2L9m8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__MhYGs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1grz9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3rkBB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time\":\"OneNews_time__1Ztr9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__3_br5\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nlet rerenderIntireTree = (state: RootStateType) => {\r\n\tconsole.log('State changed');\r\n\r\n}\r\nexport type MessageType = {\r\n\tid: number\r\n\tmessage: string\r\n}\r\nexport type DialogsType = {\r\n\tid: number\r\n\tname: string\r\n}\r\nexport type PostType = {\r\n\tid: number\r\n\tmessage: string\r\n\tlikesCount: number\r\n}\r\nexport type NewsType = {\r\n\tid: number\r\n\ttextNews: string\r\n\ttimeOfPublication: string\r\n}\r\nexport type ProfilePageType = {\r\n\tposts: PostType[]\r\n\tnewPostText: string\r\n}\r\nexport type DialogsPageType = {\r\n\tmessages: MessageType[]\r\n\tdialogs: DialogsType[]\r\n\tnewTextMessage: string\r\n}\r\nexport type newsPageType = {\r\n\tnews: NewsType[]\r\n}\r\nexport type RootStateType = {\r\n\tprofilePage: ProfilePageType\r\n\tmessagesPage: DialogsPageType\r\n\tnewsPage: newsPageType\r\n}\r\n\r\nexport let state: RootStateType = {\r\n\tprofilePage: {\r\n\t\tposts: [\r\n\t\t\t{ id: 1, message: 'Hi, how are you?', likesCount: 23 },\r\n\t\t\t{ id: 2, message: \"it's my first post\", likesCount: 32 },\r\n\t\t\t{ id: 3, message: \"it's my second post\", likesCount: 2 },\r\n\t\t\t{ id: 4, message: \"it's my third post\", likesCount: 3 },\r\n\t\t],\r\n\t\tnewPostText: 'it-kamasutra.com'\r\n\t},\r\n\tmessagesPage: {\r\n\t\tmessages: [\r\n\t\t\t{ id: 1, message: 'Hi' },\r\n\t\t\t{ id: 2, message: 'How is ypur it?' },\r\n\t\t\t{ id: 3, message: 'Yo' },\r\n\t\t\t{ id: 4, message: 'Yo' },\r\n\t\t\t{ id: 5, message: 'Yo' },\r\n\t\t],\r\n\t\tdialogs: [\r\n\t\t\t{ id: 1, name: 'Dimych' },\r\n\t\t\t{ id: 2, name: 'Andrey' },\r\n\t\t\t{ id: 3, name: 'Sveta' },\r\n\t\t\t{ id: 4, name: 'Sasha' },\r\n\t\t\t{ id: 5, name: 'Viktor' },\r\n\t\t\t{ id: 6, name: 'Valera' },\r\n\t\t],\r\n\t\tnewTextMessage: '',\r\n\t},\r\n\tnewsPage: {\r\n\t\tnews: [\r\n\t\t\t{ id: 1, timeOfPublication: '11:13:22', textNews: 'Стала известна стоимость смартфона Redmi Note 10' },\r\n\t\t\t{ id: 2, timeOfPublication: '13:33:42', textNews: 'ТОП стран Европы с высокой долей выработки ветровой и солнечной энергии' },\r\n\t\t\t{ id: 3, timeOfPublication: '18:56:12', textNews: 'Apple придумала функцию для подключения iPhone без разъемов к компьютеру' },\r\n\t\t]\r\n\t}\r\n}\r\n\r\n\r\nexport const addPost = () => {\r\n\tlet newPost: PostType = {\r\n\t\tid: 5,\r\n\t\tmessage: state.profilePage.newPostText,\r\n\t\tlikesCount: 0,\r\n\t};\r\n\tstate.profilePage.posts.push(newPost);\r\n\tstate.profilePage.newPostText = '';\r\n\trerenderIntireTree(state);\r\n}\r\n\r\nexport const updateNewPostText = (newText: string) => {\r\n\tstate.profilePage.newPostText = newText;\r\n\trerenderIntireTree(state);\r\n}\r\n\r\nexport const addMessage = (message: string) => {\r\n\tlet newMessage: MessageType = {\r\n\t\tid: 5,\r\n\t\tmessage: message\r\n\t};\r\n\tstate.messagesPage.messages.push(newMessage);\r\n\tstate.messagesPage.newTextMessage = '';\r\n\trerenderIntireTree(state);\r\n}\r\nexport const updateNewTextMessage = (newMessage: string) => {\r\n\tstate.messagesPage.newTextMessage = newMessage;\r\n\trerenderIntireTree(state);\r\n}\r\nexport const addNews = (textNews: string, timeOfPublication: string) => {\r\n\tlet newNews: NewsType = {\r\n\t\tid: 4,\r\n\t\ttimeOfPublication: timeOfPublication,\r\n\t\ttextNews: textNews,\r\n\t};\r\n\tstate.newsPage.news.push(newNews);\r\n\trerenderIntireTree(state);\r\n}\r\nexport const subscribe = (observer: (state: RootStateType) => void) => {\r\n\trerenderIntireTree = observer; // наблюдатель observer\r\n}\r\n\r\n\r\nexport default state;","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nfunction Header() {\r\n\treturn (\r\n\t\t<header className={s.header}>\r\n\t\t\t<img src=\"https://cdn.logo.com/hotlink-ok/logo-social.png\" alt=\"\" />\r\n\t\t</header>\r\n\t)\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\n\r\n\r\n\r\nfunction Navbar() {\r\n\treturn (\r\n\t\t<nav className={s.nav}>\r\n\t\t\t<div className={`${s.item}`}><NavLink activeClassName={s.active} to='/profile'>Profile</NavLink></div>\r\n\t\t\t<div className={s.item}><NavLink activeClassName={s.active} to='/dialogs'>Messages</NavLink></div>\r\n\t\t\t<div className={s.item}><NavLink activeClassName={s.active} to='/news'>News</NavLink></div>\r\n\t\t\t<div className={s.item}><a>Music</a></div>\r\n\t\t\t<div className={s.item}><a>Settings</a></div>\r\n\t\t</nav >\r\n\t)\r\n}\r\n\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { DialogsType } from '../../../redux/state';\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\nfunction DialogItem(props: DialogsType) {\r\n\tlet path = '/dialogs/' + props.id;\r\n\treturn (\r\n\t\t<div className={s.dialog + ' ' + s.active}><NavLink to={path} >{props.name}</NavLink></div >\r\n\r\n\t)\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport { MessageType } from '../../../redux/state';\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\n\r\n\r\nfunction Message(props: MessageType) {\r\n\treturn (\r\n\t\t<div className={s.message}>{props.message}</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport state, { DialogsPageType } from '../../redux/state';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css'\r\nimport Message from './Message/Message';\r\n\r\n\r\ntype DialogsStatePropsType = {\r\n\tstate: DialogsPageType\r\n\taddMessage: (message: string) => void\r\n\tupdateNewTextMessage: (newMessage: string) => void\r\n}\r\n\r\nfunction Dialogs(props: DialogsStatePropsType) {\r\n\r\n\tlet dialogsElements = props.state.dialogs.map(item => <DialogItem id={item.id} name={item.name} />)\r\n\tlet messagesElements = props.state.messages.map(item => <Message id={item.id} message={item.message} />)\r\n\r\n\tlet newMessage = React.createRef<HTMLTextAreaElement>();\r\n\tlet addMessage = () => {\r\n\t\tif (newMessage.current) {\r\n\t\t\tlet text = newMessage.current?.value;\r\n\t\t\tprops.addMessage(text);\r\n\t\t\tnewMessage.current.value = ''\r\n\t\t}\r\n\t}\r\n\tlet updateNewTextMessage = () => {\r\n\t\tif (newMessage.current?.value) {\r\n\t\t\tprops.updateNewTextMessage(newMessage.current?.value);\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div className={s.dialogs}>\r\n\t\t\t<div className={s.dialogsItems}>\r\n\t\t\t\t{dialogsElements}\r\n\t\t\t</div>\r\n\t\t\t<div className={s.messages}>\r\n\t\t\t\t{messagesElements}\r\n\t\t\t\t<div><textarea ref={newMessage} onChange={updateNewTextMessage} value={state.messagesPage.newTextMessage}></textarea></div>\r\n\t\t\t\t<div><button onClick={addMessage}>Add message</button></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { PostType } from '../../../../redux/state';\r\nimport s from './Post.module.css';\r\n\r\n\r\n\r\n\r\nfunction Post(props: PostType) {\r\n\treturn (\r\n\t\t<div className={s.item}>\r\n\t\t\t<img src=\"https://vokrug-tv.ru/pic/news/5/f/c/2/rsz300x300_5fc2879465129c11d65749ab9e3db7cc.jpg\" alt=\"\" />\r\n\t\t\t{props.message}\r\n\t\t\t<div>\r\n\t\t\t\t<span>like </span> {props.likesCount}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\nexport default Post;","import React, { ChangeEvent } from 'react';\r\nimport { PostType } from '../../../redux/state';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\n\r\ntype MyPostsPropsType = {\r\n\tposts: PostType[]\r\n\tnewPostText: string\r\n\taddPost: () => void\r\n\tupdateNewPostText: (newText: string) => void\r\n}\r\n\r\nfunction MyPosts(props: MyPostsPropsType) {\r\n\tlet postsElements = props.posts.map(item => <Post message={item.message} id={item.id} likesCount={item.likesCount} />)\r\n\r\n\tlet newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\tlet addPost = () => {\r\n\t\tif (newPostElement.current) {\r\n\t\t\tprops.addPost();\r\n\t\t}\r\n\t}\r\n\tlet onPostChange = () => {\r\n\t\tif (newPostElement.current?.value) {\r\n\t\t\tprops.updateNewPostText(newPostElement.current.value);\r\n\t\t}\r\n\r\n\t}\r\n\treturn (\r\n\t\t<div className={s.postsBlock}>\r\n\t\t\t<h3>my posts</h3>\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<button onClick={addPost}>Add post</button>\r\n\t\t\t\t<button>Remove</button>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.posts}>\r\n\t\t\t\t{postsElements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default MyPosts;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nfunction ProfileInfo() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<img src=\"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__340.jpg\" alt=\"\" />\r\n\t\t\t</div>\r\n\t\t\t<div className={s.descriptionBlock}>\r\n\t\t\t\tava + description\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport s from './Profile.module.css';\r\nimport { ProfilePageType } from '../../redux/state';\r\n\r\n\r\nexport type ProfileStatePropsType = {\r\n\tprofilePage: ProfilePageType\r\n\taddPost: () => void\r\n\tupdateNewPostText: (newText: string) => void\r\n}\r\n\r\nfunction Profile(props: ProfileStatePropsType) {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProfileInfo />\r\n\t\t\t<MyPosts posts={props.profilePage.posts} newPostText={props.profilePage.newPostText} addPost={props.addPost} updateNewPostText={props.updateNewPostText} />\r\n\t\t</div >\r\n\t)\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport { NewsType } from '../../../redux/state';\r\nimport s from './OneNews.module.css';\r\n\r\n\r\n\r\nfunction OneNews(props: NewsType) {\r\n\r\n\treturn (\r\n\t\t<div >\r\n\t\t\t<span className={s.time}>{props.timeOfPublication} </span>{props.textNews}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default OneNews;","import React, { ChangeEvent, useState } from 'react';\r\nimport { newsPageType } from '../../redux/state';\r\nimport OneNews from './OneNews/OneNews';\r\nimport s from './News.module.css'\r\n\r\ntype NewsType = {\r\n\tstate: newsPageType;\r\n\taddNews: (textNews: string, timeOfPublication: string) => void\r\n}\r\n\r\nfunction News(props: NewsType) {\r\n\r\n\tlet newsElements = props.state.news.map(item => <OneNews id={item.id} textNews={item.textNews} timeOfPublication={item.timeOfPublication} />)\r\n\r\n\tconst [textNews, setTextNews] = useState<string>('')\r\n\tconst [error, setError] = useState('');\r\n\r\n\r\n\tlet addNews = () => {\r\n\t\tlet date = new Date();\r\n\t\tlet timeOfPublication = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\r\n\r\n\t\tif (textNews) {\r\n\t\t\tprops.addNews(textNews, timeOfPublication);\r\n\t\t} else {\r\n\t\t\tsetError('Вы не ввели новость')\r\n\t\t}\r\n\t\tsetTextNews('')\r\n\t}\r\n\r\n\tlet onChangeTextNews = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n\t\tsetTextNews(e.currentTarget.value);\r\n\t\tsetError('');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={s.news}>\r\n\t\t\t\t{newsElements}\r\n\t\t\t\t<div><textarea value={textNews} onChange={onChangeTextNews}></textarea>{error && <span>{error}</span>} </div>\r\n\t\t\t\t<div><button onClick={addNews}>Add News</button></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default News;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport Dialogs from './components/Dialogs/Dialogs';\nimport Profile from './components/Profile/Profile';\nimport { Route } from 'react-router-dom';\nimport { RootStateType } from './redux/state';\nimport News from './components/News/News';\n\n\n\ntype AppPropsType = {\n  state: RootStateType\n  addPost: () => void\n  addMessage: (message: string) => void\n  addNews: (textNews: string, timeOfPublication: string) => void\n  updateNewPostText: (newText: string) => void\n  updateNewTextMessage: (newMessage: string) => void\n}\n\nfunction App(props: AppPropsType) {\n  return (\n    <div className='app-wrapper' >\n      <Header />\n      <Navbar />\n      <div className='app-wrapper-content' >\n        <Route path='/profile' render={() => <Profile profilePage={props.state.profilePage} addPost={props.addPost} updateNewPostText={props.updateNewPostText} />} />\n        <Route path='/dialogs' render={() => <Dialogs state={props.state.messagesPage} addMessage={props.addMessage} updateNewTextMessage={props.updateNewTextMessage} />} />\n        <Route path='/news' render={() => <News state={props.state.newsPage} addNews={props.addNews} />} />\n      </div>\n    </div>\n  );\n}\n\n\n\nexport default App;\n","import './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport state, { RootStateType, subscribe } from './redux/state';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { addMessage, addNews, addPost, updateNewPostText, updateNewTextMessage } from './redux/state';\n\n\n\nconst rerenderIntireTree = (state: RootStateType) => {\n\tReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<BrowserRouter>\n\t\t\t\t<App state={state} addPost={addPost} addMessage={addMessage} addNews={addNews} updateNewPostText={updateNewPostText} updateNewTextMessage={updateNewTextMessage} />\n\t\t\t</BrowserRouter>\n\t\t</React.StrictMode>,\n\t\tdocument.getElementById('root')\n\t);\n}\n\nrerenderIntireTree(state);\n\nsubscribe(rerenderIntireTree);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}