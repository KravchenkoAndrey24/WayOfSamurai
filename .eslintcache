[{"D:\\Main_samurai_TSX\\my-app\\src\\index.tsx":"1","D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"2","D:\\Main_samurai_TSX\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"3","D:\\Main_samurai_TSX\\my-app\\src\\components\\Dialogs\\Dialogs.tsx":"4","D:\\Main_samurai_TSX\\my-app\\src\\components\\News\\News.tsx":"5","D:\\Main_samurai_TSX\\my-app\\src\\components\\Navbar\\Navbar.tsx":"6","D:\\Main_samurai_TSX\\my-app\\src\\App.tsx":"7","D:\\Main_samurai_TSX\\my-app\\src\\components\\News\\OneNews\\OneNews.tsx":"8","D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"9","D:\\Main_samurai_TSX\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx":"10","D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\Profile.tsx":"11","D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"12","D:\\Main_samurai_TSX\\my-app\\src\\redux\\profileReducer.tsx":"13","D:\\Main_samurai_TSX\\my-app\\src\\redux\\dialogsReducer.tsx":"14","D:\\Main_samurai_TSX\\my-app\\src\\redux\\newsReducer.tsx":"15","D:\\Main_samurai_TSX\\my-app\\src\\redux\\store.ts":"16","D:\\Main_samurai_TSX\\my-app\\src\\redux\\redux-store.tsx":"17","D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"18","D:\\Main_samurai_TSX\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx":"19","D:\\Main_samurai_TSX\\my-app\\src\\components\\News\\NewsContainer.tsx":"20","D:\\Main_samurai_TSX\\my-app\\src\\components\\Header\\Header.tsx":"21","D:\\Main_samurai_TSX\\my-app\\src\\redux\\usersReducer.tsx":"22","D:\\Main_samurai_TSX\\my-app\\src\\components\\Users\\UsersContainer.tsx":"23","D:\\Main_samurai_TSX\\my-app\\src\\components\\Users\\Users.tsx":"24","D:\\Main_samurai_TSX\\my-app\\src\\components\\common\\preloader\\Preloader.tsx":"25","D:\\Main_samurai_TSX\\my-app\\src\\components\\Header\\HeaderContainer.tsx":"26","D:\\Main_samurai_TSX\\my-app\\src\\api\\api.ts":"27","D:\\Main_samurai_TSX\\my-app\\src\\redux\\authReducer.tsx":"28","D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\ProfileContainer.tsx":"29","D:\\Main_samurai_TSX\\my-app\\src\\components\\hoc\\WithAuthRedirect.tsx":"30","D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"31","D:\\Main_samurai_TSX\\my-app\\src\\components\\Login\\Login.tsx":"32","D:\\Main_samurai_TSX\\my-app\\src\\utils\\validators\\validators.ts":"33","D:\\Main_samurai_TSX\\my-app\\src\\components\\common\\FormsControls\\FormsControls.tsx":"34","D:\\Main_samurai_TSX\\my-app\\src\\redux\\appReducer.ts":"35","D:\\Main_samurai_TSX\\my-app\\src\\redux\\usersSelectors.ts":"36"},{"size":728,"mtime":1621492835857,"results":"37","hashOfConfig":"38"},{"size":1331,"mtime":1620682334362,"results":"39","hashOfConfig":"38"},{"size":404,"mtime":1616615561444,"results":"40","hashOfConfig":"38"},{"size":1848,"mtime":1620763619960,"results":"41","hashOfConfig":"38"},{"size":795,"mtime":1616615309071,"results":"42","hashOfConfig":"38"},{"size":721,"mtime":1617558471410,"results":"43","hashOfConfig":"38"},{"size":1856,"mtime":1621493797922,"results":"44","hashOfConfig":"38"},{"size":283,"mtime":1616615685521,"results":"45","hashOfConfig":"38"},{"size":871,"mtime":1620070866932,"results":"46","hashOfConfig":"38"},{"size":276,"mtime":1616615606837,"results":"47","hashOfConfig":"38"},{"size":502,"mtime":1619991786146,"results":"48","hashOfConfig":"38"},{"size":441,"mtime":1616615743674,"results":"49","hashOfConfig":"38"},{"size":3201,"mtime":1620893251244,"results":"50","hashOfConfig":"38"},{"size":1475,"mtime":1620595888522,"results":"51","hashOfConfig":"38"},{"size":1728,"mtime":1618156735687,"results":"52","hashOfConfig":"38"},{"size":3361,"mtime":1616614857133,"results":"53","hashOfConfig":"38"},{"size":1467,"mtime":1621493486970,"results":"54","hashOfConfig":"38"},{"size":962,"mtime":1620679592848,"results":"55","hashOfConfig":"38"},{"size":803,"mtime":1620595920714,"results":"56","hashOfConfig":"38"},{"size":1024,"mtime":1616615392759,"results":"57","hashOfConfig":"38"},{"size":596,"mtime":1620800666273,"results":"58","hashOfConfig":"38"},{"size":4362,"mtime":1621502087683,"results":"59","hashOfConfig":"38"},{"size":3085,"mtime":1621628370343,"results":"60","hashOfConfig":"38"},{"size":1914,"mtime":1619353322131,"results":"61","hashOfConfig":"38"},{"size":283,"mtime":1618053448779,"results":"62","hashOfConfig":"38"},{"size":964,"mtime":1621415854921,"results":"63","hashOfConfig":"38"},{"size":2361,"mtime":1620857829702,"results":"64","hashOfConfig":"38"},{"size":2153,"mtime":1621495311806,"results":"65","hashOfConfig":"38"},{"size":2054,"mtime":1621494523986,"results":"66","hashOfConfig":"38"},{"size":850,"mtime":1620581071605,"results":"67","hashOfConfig":"38"},{"size":1263,"mtime":1620073081525,"results":"68","hashOfConfig":"38"},{"size":1626,"mtime":1620808012078,"results":"69","hashOfConfig":"38"},{"size":339,"mtime":1620681476373,"results":"70","hashOfConfig":"38"},{"size":828,"mtime":1620765023902,"results":"71","hashOfConfig":"38"},{"size":1003,"mtime":1621495783185,"results":"72","hashOfConfig":"38"},{"size":811,"mtime":1621628364485,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1qlazp1",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"121"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Main_samurai_TSX\\my-app\\src\\index.tsx",["156"],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Dialogs\\Dialogs.tsx",["157","158"],"import React, { ChangeEvent, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { InitialDialogsStateType } from '../../redux/dialogsReducer';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css'\r\nimport Message from './Message/Message';\r\n\r\n\r\nexport type DialogsPropsType = {\r\n\tdialogsPage: InitialDialogsStateType\r\n\tisAuth: boolean\r\n\taddMessage: (messageText: string) => void\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props: any) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit} >\r\n\t\t\t<div>\r\n\t\t\t\t<Field validate={[required, maxLength50]} component={Textarea} name={'messageText'} placeholder={'your message'} />\r\n\t\t\t</div>\r\n\t\t\t<button>Add post</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n\t// a unique name for the form\r\n\tform: 'dialogAddMessageForm'\r\n})(AddMessageForm)\r\n\r\n\r\n\r\nfunction Dialogs(props: DialogsPropsType) {\r\n\r\n\tlet dialogsElements = props.dialogsPage.dialogs.map(item => <DialogItem id={item.id} name={item.name} />)\r\n\tlet messagesElements = props.dialogsPage.messages.map(item => <Message id={item.id} message={item.message} />)\r\n\r\n\tconst AddNewMessage = (formData: any) => {\r\n\t\tprops.addMessage(formData.messageText)\r\n\t}\r\n\r\n\tconsole.log(props.isAuth);\r\n\tif (props.isAuth === false) {\r\n\t\treturn <Redirect to={'login'} />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.dialogs}>\r\n\t\t\t<div className={s.dialogsItems}>\r\n\t\t\t\t{dialogsElements}\r\n\t\t\t</div>\r\n\t\t\t<div className={s.messages}>\r\n\t\t\t\t{messagesElements}\r\n\t\t\t\t<AddMessageFormRedux onSubmit={AddNewMessage} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dialogs;","D:\\Main_samurai_TSX\\my-app\\src\\components\\News\\News.tsx",[],["159","160"],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Navbar\\Navbar.tsx",["161","162"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\n\r\n\r\n\r\nfunction Navbar() {\r\n\treturn (\r\n\t\t<nav className={s.nav}>\r\n\t\t\t<div className={`${s.item}`}><NavLink activeClassName={s.active} to='/profile'>Profile</NavLink></div>\r\n\t\t\t<div className={s.item}><NavLink activeClassName={s.active} to='/dialogs'>Messages</NavLink></div>\r\n\t\t\t<div className={s.item}><NavLink activeClassName={s.active} to='/news'>News</NavLink></div>\r\n\t\t\t<div className={s.item}><NavLink activeClassName={s.active} to='/users'>Users</NavLink></div>\r\n\t\t\t<div className={s.item}><a>Music</a></div>\r\n\t\t\t<div className={s.item}><a>Settings</a></div>\r\n\t\t</nav >\r\n\t)\r\n}\r\n\r\n\r\nexport default Navbar;","D:\\Main_samurai_TSX\\my-app\\src\\App.tsx",["163"],"D:\\Main_samurai_TSX\\my-app\\src\\components\\News\\OneNews\\OneNews.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\Profile.tsx",["164"],"import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport { ProfileContainerType } from './ProfileContainer';\r\n\r\n\r\n\r\nfunction Profile(props: ProfileContainerType) {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProfileInfo updateUserStatusThunk={props.updateUserStatusThunk} profile={props.profile} status={props.status} />\r\n\t\t\t<MyPostsContainer />\r\n\t\t</div >\r\n\t)\r\n}\r\nexport default Profile;","D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\redux\\profileReducer.tsx",["165"],"import { Dispatch } from \"redux\";\r\nimport { authAPI, profileAPI } from \"../api/api\";\r\n\r\nexport enum PROFILE_ACTIONS_TYPE {\r\n\tADD_POST = 'ADD-POST',\r\n\tSET_USER_PROFILE = \"SET_USER_PROFILE\",\r\n\tSET_STATUS = 'SET_STATUS'\r\n}\r\n\r\nexport type profileActionsTypes = ReturnType<typeof setStatusUser> | ReturnType<typeof addPostActionCreator> | ReturnType<typeof setUserProfile>;\r\n\r\nexport type PostType = {\r\n\tid: number\r\n\tmessage: string\r\n\tlikesCount: number\r\n}\r\nexport type profileContactsType = {\r\n\tfacebook: string\r\n\twebsite: string\r\n\tvk: string\r\n\ttwitter: string\r\n\tinstagram: string\r\n\tyoutube: string\r\n\tgithub: string\r\n\tmainLink: string\r\n}\r\nexport type profileType = {\r\n\taboutMe: string\r\n\tcontacts: profileContactsType\r\n\tlookingForAJob: boolean\r\n\tlookingForAJobDescription: string\r\n\tfullName: string\r\n\tuserId: number\r\n\tphotos: {\r\n\t\tsmall: string | null\r\n\t\tlarge: string | undefined\r\n\t}\r\n}\r\n\r\n\r\n\r\nlet initialState = {\r\n\tposts: [\r\n\t\t{ id: 1, message: 'Hi, how are you?', likesCount: 23 },\r\n\t\t{ id: 2, message: \"it's my first post\", likesCount: 32 },\r\n\t\t{ id: 3, message: \"it's my second post\", likesCount: 2 },\r\n\t\t{ id: 4, message: \"it's my third post\", likesCount: 3 },\r\n\t] as PostType[],\r\n\tprofile: {\r\n\t\taboutMe: '',\r\n\t\tcontacts: {\r\n\t\t\tfacebook: '',\r\n\t\t\twebsite: '',\r\n\t\t\tvk: '',\r\n\t\t\ttwitter: '',\r\n\t\t\tinstagram: '',\r\n\t\t\tyoutube: '',\r\n\t\t\tgithub: '',\r\n\t\t\tmainLink: '',\r\n\t\t},\r\n\t\tlookingForAJob: true,\r\n\t\tlookingForAJobDescription: '',\r\n\t\tfullName: '',\r\n\t\tuserId: 0,\r\n\t\tphotos: {\r\n\t\t\tsmall: '',\r\n\t\t\tlarge: ''\r\n\t\t}\r\n\t} as profileType,\r\n\tstatus: ''\r\n}\r\nexport type InitialProfileStateType = typeof initialState;\r\n\r\nconst profileReducer = (state: InitialProfileStateType = initialState, action: profileActionsTypes): InitialProfileStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase PROFILE_ACTIONS_TYPE.ADD_POST:\r\n\t\t\tlet newPost: PostType = {\r\n\t\t\t\tid: 5,\r\n\t\t\t\tmessage: action.newPostText,\r\n\t\t\t\tlikesCount: 0,\r\n\t\t\t};\r\n\t\t\treturn { ...state, posts: [...state.posts.map(item => ({ ...item })), newPost] };\r\n\t\tcase PROFILE_ACTIONS_TYPE.SET_USER_PROFILE:\r\n\t\t\treturn { ...state, profile: { ...action.profile } }\r\n\t\tcase PROFILE_ACTIONS_TYPE.SET_STATUS:\r\n\t\t\treturn { ...state, status: action.status }\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText: string) => ({ type: PROFILE_ACTIONS_TYPE.ADD_POST, newPostText }) as const\r\nexport const setUserProfile = (profile: profileType) => ({ type: PROFILE_ACTIONS_TYPE.SET_USER_PROFILE, profile }) as const\r\nexport const setStatusUser = (status: string) => ({ type: PROFILE_ACTIONS_TYPE.SET_STATUS, status }) as const\r\n\r\nexport const getUserProfile = (userId: string) => (dispatch: Dispatch) => {\r\n\r\n\tprofileAPI.getProfile(userId)\r\n\t\t.then(data => {\r\n\r\n\t\t\tdispatch(setUserProfile(data));\r\n\t\t})\r\n}\r\n\r\nexport const getUserStatusThunk = (userId: string) => (dispatch: Dispatch) => {\r\n\tprofileAPI.getUserStatus(userId)\r\n\t\t.then(data => {\r\n\t\t\tdispatch(setStatusUser(data.data))\r\n\t\t})\r\n}\r\n\r\nexport const updateUserStatusThunk = (status: string) => (dispatch: Dispatch) => {\r\n\tprofileAPI.updateUserStatus(status)\r\n\t\t.then(data => {\r\n\t\t\tif (data.resultCode === 0) {\r\n\t\t\t\tdispatch(setStatusUser(status))\r\n\t\t\t}\r\n\t\t})\r\n}\r\n\r\nexport default profileReducer;","D:\\Main_samurai_TSX\\my-app\\src\\redux\\dialogsReducer.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\redux\\newsReducer.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\redux\\store.ts",["166","167","168","169","170","171"],"D:\\Main_samurai_TSX\\my-app\\src\\redux\\redux-store.tsx",["172"],"import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport authReducer, { authActionsTypes } from \"./authReducer\";\r\nimport dialogsReducer, { dialogsActionsTypes } from \"./dialogsReducer\";\r\nimport newsReducer, { newsActionsTypes } from \"./newsReducer\";\r\nimport profileReducer, { profileActionsTypes } from \"./profileReducer\";\r\nimport usersReducer, { usersActionsTypes } from \"./usersReducer\";\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer, { appActionsTypes } from \"./appReducer\";\r\n\r\nexport type ActionsTypes = profileActionsTypes | dialogsActionsTypes | newsActionsTypes | usersActionsTypes | authActionsTypes | appActionsTypes;\r\n\r\n/* export type StoreType = {\r\n\t_state: AppStateType\r\n\tgetState: () => AppStateType\r\n\t_callSubscriber: () => void\r\n\tsubscribe: (callback: () => void) => void\r\n\tdispatch: (action: ActionsTypes) => void\r\n}\r\n */\r\n\r\nlet rootReducers = combineReducers({\r\n\tprofilePage: profileReducer,\r\n\tmessagesPage: dialogsReducer,\r\n\tnewsPage: newsReducer,\r\n\tusersPage: usersReducer,\r\n\tauth: authReducer,\r\n\tform: formReducer,\r\n\tapp: appReducer\r\n});\r\n\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducers>;\r\n\r\nlet store = createStore(rootReducers, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppStateType, unknown, ActionsTypes>\r\n\r\nexport default store;\r\n\r\nlet storetest = window;","D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["173"],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx",["174"],"D:\\Main_samurai_TSX\\my-app\\src\\components\\News\\NewsContainer.tsx",["175"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { addNewsActionCreator, InitialStateNewsType, updateTextNewsActionCreator } from '../../redux/newsReducer';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport News from './News';\r\n\r\n\r\n\r\ntype MapStateToPropsType = {\r\n\tnewsPage: InitialStateNewsType\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n\taddNews: () => void\r\n\tonChangeTextNews: (text: string) => void\r\n}\r\n\r\nexport type NewsProps = MapStateToPropsType & MapDispatchToProps;\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n\treturn {\r\n\t\tnewsPage: state.newsPage\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => {\r\n\treturn {\r\n\t\taddNews: () => {\r\n\t\t\tdispatch(addNewsActionCreator())\r\n\t\t},\r\n\t\tonChangeTextNews: (text: string) => {\r\n\t\t\tdispatch(updateTextNewsActionCreator(text))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst NewsContainer = connect(mapStateToProps, mapDispatchToProps)(News);\r\n\r\nexport default NewsContainer;",["176","177"],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Header\\Header.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\redux\\usersReducer.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Users\\UsersContainer.tsx",["178"],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Users\\Users.tsx",["179"],"import axios from 'axios';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport UserPhoto from '../../assets/images/user-male.png'\r\nimport { userType } from '../../redux/usersReducer';\r\nimport s from './Users.module.css';\r\n\r\nexport type UsersType = {\r\n\ttotalUsersCount: number\r\n\tpageSize: number\r\n\tcurrentPage: number\r\n\tusers: userType[]\r\n\tfollowingInProgress: string[]\r\n\tonPageChanged: (pageNumber: number) => void\r\n\tfollowThunk: (userId: string) => void\r\n\tunfollowThunk: (userId: string) => void\r\n}\r\n\r\nexport const Users = (props: UsersType) => {\r\n\r\n\tlet pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\tlet pages = [];\r\n\r\n\tfor (let i = 1; i <= pagesCount; i++) {\r\n\t\tpages.push(i);\r\n\t}\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t{pages.map(item => {\r\n\t\t\t\t\treturn <span onClick={\r\n\t\t\t\t\t\t() => { props.onPageChanged(item) }\r\n\t\t\t\t\t} className={props.currentPage === item ? s.selectedPage : ''}>{item}</span>\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tprops.users.map(item => <div key={item.id}>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<NavLink to={'/profile/' + item.id}>\r\n\t\t\t\t\t\t\t\t<img className={s.userPhoto} src={item.photos.small != null ? item.photos.small : UserPhoto} alt=\"\" />\r\n\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{item.followed\r\n\t\t\t\t\t\t\t\t? <button disabled={props.followingInProgress.some(id => id === item.id)} onClick={() => {\r\n\t\t\t\t\t\t\t\t\tprops.unfollowThunk(item.id)\r\n\t\t\t\t\t\t\t\t}}>Unfollow</button>\r\n\t\t\t\t\t\t\t\t: <button disabled={props.followingInProgress.some(id => id === item.id)} onClick={() => {\r\n\t\t\t\t\t\t\t\t\tprops.followThunk(item.id)\r\n\t\t\t\t\t\t\t\t}}>Follow</button>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<div>{item.name}</div>\r\n\t\t\t\t\t\t\t<div>{item.status}</div>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<div>{'item.location.country'}</div>\r\n\t\t\t\t\t\t\t<div>{'item.location.city'}</div>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>)\r\n\t\t\t}\r\n\t\t</div >\r\n\t)\r\n}","D:\\Main_samurai_TSX\\my-app\\src\\components\\common\\preloader\\Preloader.tsx",["180"],"import React from 'react';\r\nimport preloaderGif from '../../../assets/images/preloader.gif';\r\n\r\ntype preloaderType = {\r\n}\r\n\r\nexport const Preloader = (props: preloaderType) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<img style={{ width: '100px', height: '100px' }} src={preloaderGif} />\r\n\t\t</>\r\n\t)\r\n}","D:\\Main_samurai_TSX\\my-app\\src\\components\\Header\\HeaderContainer.tsx",["181","182"],"D:\\Main_samurai_TSX\\my-app\\src\\api\\api.ts",[],"D:\\Main_samurai_TSX\\my-app\\src\\redux\\authReducer.tsx",["183","184","185","186"],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\ProfileContainer.tsx",["187","188"],"D:\\Main_samurai_TSX\\my-app\\src\\components\\hoc\\WithAuthRedirect.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx",["189"],"D:\\Main_samurai_TSX\\my-app\\src\\components\\Login\\Login.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\utils\\validators\\validators.ts",["190"],"D:\\Main_samurai_TSX\\my-app\\src\\components\\common\\FormsControls\\FormsControls.tsx",[],"D:\\Main_samurai_TSX\\my-app\\src\\redux\\appReducer.ts",[],"D:\\Main_samurai_TSX\\my-app\\src\\redux\\usersSelectors.ts",[],{"ruleId":null,"fatal":true,"severity":2,"message":"191","line":18,"column":11},{"ruleId":"192","severity":1,"message":"193","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":28},{"ruleId":"192","severity":1,"message":"196","line":1,"column":30,"nodeType":"194","messageId":"195","endLine":1,"endColumn":39},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":14,"column":28,"nodeType":"203","endLine":14,"endColumn":31},{"ruleId":"201","severity":1,"message":"202","line":15,"column":28,"nodeType":"203","endLine":15,"endColumn":31},{"ruleId":"192","severity":1,"message":"204","line":4,"column":17,"nodeType":"194","messageId":"195","endLine":4,"endColumn":27},{"ruleId":"192","severity":1,"message":"205","line":3,"column":8,"nodeType":"194","messageId":"195","endLine":3,"endColumn":9},{"ruleId":"192","severity":1,"message":"206","line":2,"column":10,"nodeType":"194","messageId":"195","endLine":2,"endColumn":17},{"ruleId":"192","severity":1,"message":"207","line":1,"column":10,"nodeType":"194","messageId":"195","endLine":1,"endColumn":30},{"ruleId":"192","severity":1,"message":"208","line":1,"column":32,"nodeType":"194","messageId":"195","endLine":1,"endColumn":62},{"ruleId":"192","severity":1,"message":"209","line":2,"column":10,"nodeType":"194","messageId":"195","endLine":2,"endColumn":27},{"ruleId":"192","severity":1,"message":"210","line":2,"column":29,"nodeType":"194","messageId":"195","endLine":2,"endColumn":56},{"ruleId":"192","severity":1,"message":"211","line":3,"column":10,"nodeType":"194","messageId":"195","endLine":3,"endColumn":27},{"ruleId":"192","severity":1,"message":"212","line":3,"column":29,"nodeType":"194","messageId":"195","endLine":3,"endColumn":56},{"ruleId":"192","severity":1,"message":"213","line":42,"column":5,"nodeType":"194","messageId":"195","endLine":42,"endColumn":14},{"ruleId":"192","severity":1,"message":"214","line":1,"column":8,"nodeType":"194","messageId":"195","endLine":1,"endColumn":13},{"ruleId":"192","severity":1,"message":"215","line":3,"column":10,"nodeType":"194","messageId":"195","endLine":3,"endColumn":18},{"ruleId":"192","severity":1,"message":"214","line":1,"column":8,"nodeType":"194","messageId":"195","endLine":1,"endColumn":13},{"ruleId":"197","replacedBy":"216"},{"ruleId":"199","replacedBy":"217"},{"ruleId":"192","severity":1,"message":"218","line":1,"column":8,"nodeType":"194","messageId":"195","endLine":1,"endColumn":13},{"ruleId":"192","severity":1,"message":"218","line":1,"column":8,"nodeType":"194","messageId":"195","endLine":1,"endColumn":13},{"ruleId":"219","severity":1,"message":"220","line":10,"column":4,"nodeType":"203","endLine":10,"endColumn":74},{"ruleId":"192","severity":1,"message":"218","line":1,"column":8,"nodeType":"194","messageId":"195","endLine":1,"endColumn":13},{"ruleId":"192","severity":1,"message":"205","line":5,"column":8,"nodeType":"194","messageId":"195","endLine":5,"endColumn":9},{"ruleId":"192","severity":1,"message":"215","line":1,"column":10,"nodeType":"194","messageId":"195","endLine":1,"endColumn":18},{"ruleId":"192","severity":1,"message":"221","line":3,"column":10,"nodeType":"194","messageId":"195","endLine":3,"endColumn":21},{"ruleId":"192","severity":1,"message":"222","line":4,"column":10,"nodeType":"194","messageId":"195","endLine":4,"endColumn":22},{"ruleId":"192","severity":1,"message":"223","line":4,"column":24,"nodeType":"194","messageId":"195","endLine":4,"endColumn":36},{"ruleId":"192","severity":1,"message":"205","line":2,"column":8,"nodeType":"194","messageId":"195","endLine":2,"endColumn":9},{"ruleId":"192","severity":1,"message":"224","line":7,"column":10,"nodeType":"194","messageId":"195","endLine":7,"endColumn":18},{"ruleId":"192","severity":1,"message":"225","line":1,"column":30,"nodeType":"194","messageId":"195","endLine":1,"endColumn":39},{"ruleId":"192","severity":1,"message":"214","line":1,"column":8,"nodeType":"194","messageId":"195","endLine":1,"endColumn":13},"Parsing error: '>' expected.","@typescript-eslint/no-unused-vars","'ChangeEvent' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-native-reassign",["226"],"no-negated-in-lhs",["227"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'withRouter' is defined but never used.","'s' is defined but never used.","'authAPI' is defined but never used.","'AddMessageActionType' is defined but never used.","'UpdateNewTextMessageActionType' is defined but never used.","'AddNewsActionType' is defined but never used.","'updateTextNewsActionCreator' is defined but never used.","'AddPostActionType' is defined but never used.","'UpdateNewPostTextActionType' is defined but never used.","'storetest' is assigned a value but never used.","'React' is defined but never used.","'Dispatch' is defined but never used.",["226"],["227"],"'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ThunkAction' is defined but never used.","'ActionsTypes' is defined but never used.","'AppStateType' is defined but never used.","'Redirect' is defined but never used.","'RefObject' is defined but never used.","no-global-assign","no-unsafe-negation"]